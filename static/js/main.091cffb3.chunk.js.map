{"version":3,"sources":["utilities/utileties.js","components/global.js","components/ToggleTheme/Toggle.styled.js","components/ToggleTheme/ToggleTheme.js","components/Layout/Layout.js","components/Tabs/Buttons.js","components/Clock/Clock.js","components/Tabs/Tabs.js","components/App.js","components/useDarkMode.js","index.js"],"names":["GetCurDay","d","Date","dayweek","getDay","getHours","lightTheme","body","sideBar","button","text","item","itemTime","itemHover","clock","toggleBorder","btnToggle","btnToggleColor","darkTheme","GlobalStyles","createGlobalStyle","theme","ToggleContainer","styled","Toggle","toggleTheme","onClick","Layout","children","className","Button","Component","ButtonToggle","active","ToggleBtnPanel","getActiveIdx","items","useState","setActive","map","idx","shortName","id","Tabs","state","activeIdx","setActiveTabIdx","setState","nextProps","nextState","this","tab","props","rel","href","target","tabsBtn","label","schedule","description","url","uuid","timeStart","timeEnd","App","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","useDarkMode","themeMode","tabs","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.091cffb3.chunk.js","sourcesContent":["export function GetCurDay() {\r\n    const d = new Date();\r\n    let dayweek = d.getDay();\r\n    let getCurrTime = d.getHours();\r\n    getCurrTime > 17 ? dayweek += 1 : dayweek = dayweek;\r\n    return dayweek > 5 ? 0 : dayweek - 1;\r\n}\r\n\r\nexport const lightTheme = {\r\n    body: '#d6f3ff',\r\n    sideBar: '#00bcd4',\r\n    button: '#f55b73',\r\n    text: '#252525',\r\n    item: '#ffc107',\r\n    itemTime: '#ff9800',\r\n    itemHover: '#F25C05',\r\n    clock: '#637780',\r\n    toggleBorder: '#091236',\r\n    btnToggle: '#00bcd4',\r\n    btnToggleColor: '#fafafa',\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#152c40',\r\n    sideBar: '#364959',\r\n    button: '#d96b2b',\r\n    text: '#FAFAFA',\r\n    item: '#f25c05',\r\n    itemTime: '#ff6f00',\r\n    itemHover: '#F25C05',\r\n    clock: '#637780',\r\n    toggleBorder: '#FAFAFA',\r\n    btnToggle: '#FAFAFA',\r\n    btnToggleColor: '#252525',\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    font-size: 62.5%;\r\n    background-color: #152c40;\r\n  }\r\n\r\n  body {\r\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    margin: 0;\r\n    padding: 0;\r\n    transition: all 0.5s linear;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n      font-weight: 700;\r\n       margin: 0;\r\n  }\r\n\r\n  p {\r\n      margin: 0;\r\n  }\r\n\r\n  .DayBox{\r\n    background-color: ${({ theme }) => theme.sideBar};\r\n  }\r\n\r\n  .LessonItem{\r\n    background-color: ${({ theme }) => theme.item};\r\n  }\r\n\r\n  .LessonItem:hover{\r\n    background-color: ${({ theme }) => theme.itemTime};\r\n  }\r\n  \r\n  .ClockBox{\r\n    background-color: ${({ theme }) => theme.clock};\r\n  }\r\n\r\n  .TimeBoxLesson{\r\n    background-color: ${({ theme }) => theme.itemTime};\r\n  }\r\n\r\n  .LessonUrl{\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ToggleContainer = styled.button`\r\n    background: ${({ theme }) => theme.btnToggle};\r\n    border: none;\r\n    /* border: 2px solid ${({ theme }) => theme.toggleBorder}; */\r\n    border-radius: 30px;\r\n    cursor: pointer;\r\n    font-size: 0.5rem;\r\n    margin: 5px 1em 0 auto;\r\n    overflow: hidden;\r\n    padding: 0.5rem;\r\n    width: 8rem;\r\n    height: 4rem;\r\n    outline: none;\r\n\r\n    h1 {\r\n        color: ${({ theme }) => theme.btnToggleColor};\r\n        font-size: 2rem;\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\nimport { ToggleContainer } from './Toggle.styled';\r\n\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n    const islLight = theme === 'light';\r\n    return (\r\n        <ToggleContainer onClick={toggleTheme}>\r\n            <h1>{theme === 'light' ? 'light' : 'dark'}</h1>\r\n        </ToggleContainer>\r\n    );\r\n};\r\n\r\nToggle.propTypes = {\r\n    theme: string.isRequired,\r\n    toggleTheme: func.isRequired,\r\n};\r\n\r\nexport default Toggle;\r\n","import React from 'react';\r\nimport './Layout.css';\r\n\r\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GetCurDay } from '../../utilities/utileties';\r\n\r\nconst Button = styled.button`\r\n    border: none;\r\n    text-transform: uppercase;\r\n    width: 8rem;\r\n    height: 8rem;\r\n    text-align: center;\r\n    background: ${({ theme }) => theme.button};\r\n    color: white;\r\n    background-size: cover;\r\n    transition: 0.5s;\r\n    margin: 1rem;\r\n    display: inline-block;\r\n    border-radius: 5px;\r\n    font-size: 2.5rem;\r\n    margin-bottom: 5rem;\r\n    cursor: pointer;\r\n    transition: 0.5s;\r\n`;\r\nconst ButtonToggle = styled(Button)`\r\n    opacity: 0.825;\r\n    ${({ active }) =>\r\n        active &&\r\n        `\r\n    opacity: 1;\r\n    outline: none;\r\n    width: 10rem;\r\n    height: 10rem;\r\n    transition: 0.5s;\r\n  `}\r\n`;\r\n\r\nexport default function ToggleBtnPanel({ getActiveIdx, items }) {\r\n    const [active, setActive] = useState(items[GetCurDay()]);\r\n    return (\r\n        <>\r\n            {items.map((item, idx) => (\r\n                <ButtonToggle\r\n                    key={item.id}\r\n                    active={active === item}\r\n                    onClick={() => {\r\n                        setActive(item);\r\n                        getActiveIdx(idx);\r\n                    }}\r\n                >\r\n                    {item.shortName}\r\n                </ButtonToggle>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Clock.css';\r\n\r\nexport default class Clock extends Component {\r\n    state = {\r\n        date: new Date(),\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date(),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ClockBox\">\r\n                <h2>{this.getDate}</h2>\r\n                <h2 className=\"Clock\">\r\n                    {this.state.date.toLocaleTimeString([], {\r\n                        hour: '2-digit',\r\n                        minute: '2-digit',\r\n                    })}\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Clock from '../Clock/Clock';\r\nimport ToggleBtnPanel from './Buttons';\r\nimport { GetCurDay } from '../../utilities/utileties';\r\nimport { uuid } from 'uuidv4';\r\nimport './Tabs.css';\r\nimport tabsBtn from '../../tabs.json';\r\n\r\nexport default class Tabs extends Component {\r\n    state = {\r\n        activeIdx: GetCurDay(),\r\n    };\r\n\r\n    setActiveTabIdx = idx => {\r\n        this.setState({\r\n            activeIdx: idx,\r\n        });\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextState.activeIdx !== this.state.activeIdx;\r\n    }\r\n\r\n    render() {\r\n        const tab = this.props.items[this.state.activeIdx];\r\n        return (\r\n            <section className=\"SectionSchedule\">\r\n                <div className=\"DayBox\">\r\n                    <a\r\n                        className=\"Logo\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://sa-vo.github.io/SaVo/\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        <div className=\"LogoBox\">\r\n                            <p className=\"logo-text\">SaVo</p>\r\n                            <p className=\"logo-text--big\">DEV</p>\r\n                        </div>\r\n                    </a>\r\n\r\n                    <ToggleBtnPanel\r\n                        getActiveIdx={this.setActiveTabIdx}\r\n                        items={tabsBtn}\r\n                    />\r\n                </div>\r\n\r\n                <article className=\"DayContent\">\r\n                    <h2 className=\"Day\">Розклад на {tab.label}</h2>\r\n\r\n                    <ul className=\"LessonsBox\">\r\n                        {tab.schedule.map(\r\n                            ({\r\n                                description,\r\n                                url,\r\n                                id = uuid(),\r\n                                timeStart,\r\n                                timeEnd,\r\n                            }) => (\r\n                                <li key={id} className=\"LessonItem\">\r\n                                    <a href={url} className=\"LessonUrl\">\r\n                                        {description}\r\n                                    </a>\r\n                                    <div className=\"TimeBoxLesson\">\r\n                                        <p className=\"TimeLesson\">\r\n                                            {timeStart}\r\n                                        </p>\r\n                                        <p className=\"TimeLesson\">{timeEnd}</p>\r\n                                    </div>\r\n                                </li>\r\n                            ),\r\n                        )}\r\n                    </ul>\r\n                </article>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { useDarkMode } from './useDarkMode';\r\nimport { lightTheme, darkTheme } from '../utilities/utileties';\r\nimport { GlobalStyles } from './global';\r\nimport Toggle from './ToggleTheme/ToggleTheme';\r\n\r\nimport Layout from './Layout';\r\nimport Tabs from './Tabs/Tabs';\r\nimport tabs from '../tabs.json';\r\n\r\nfunction App() {\r\n    const [theme, toggleTheme, componentMounted] = useDarkMode();\r\n\r\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n\r\n    if (!componentMounted) {\r\n        return <div />;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={themeMode}>\r\n            <>\r\n                <GlobalStyles />\r\n\r\n                <Layout>\r\n                    <Tabs items={tabs} />\r\n                    <Toggle theme={theme} toggleTheme={toggleTheme} />\r\n                </Layout>\r\n            </>\r\n        </ThemeProvider>\r\n    );\r\n}\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n    const [componentMounted, setComponentMounted] = useState(false);\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode);\r\n        setTheme(mode);\r\n    };\r\n\r\n    const toggleTheme = () => {\r\n        if (theme === 'light') {\r\n            setMode('dark');\r\n        } else {\r\n            setMode('light');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        window.matchMedia &&\r\n        window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n        !localTheme\r\n            ? setMode('dark')\r\n            : localTheme\r\n            ? setTheme(localTheme)\r\n            : setMode('light');\r\n        setComponentMounted(true);\r\n    }, []);\r\n\r\n    return [theme, toggleTheme, componentMounted];\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}